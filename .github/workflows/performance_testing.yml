# Copyright (c) Microsoft Corporation.
# Licensed under the MIT license.

# This continuous integration pipeline is triggered anytime a user pushes code to the repo.
name:  Performance Testing 

# Trigger on every master branch push and pull request
on: workflow_dispatch
jobs:

  build:

    strategy:
      matrix:
        targetplatform: [x86, x64]

    runs-on: windows-latest

    env:
      Actions_Allow_Unsecure_Commands: true # Allows AddPAth and SetEnv commands

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.

    # Test
    - name: Get-Host
      run: Powershell.exe -NoProfile -ExecutionPolicy Bypass -NoLogo -Command Get-Host
      shell: cmd  
    
    - name: Get-Module
      run: Powershell.exe -NoProfile -ExecutionPolicy Bypass -NoLogo -Command Get-Module
      shell: cmd  

    - name: PSVersionTable.PSVersion
      run: Powershell.exe -NoProfile -ExecutionPolicy Bypass -NoLogo -Command $PSVersionTable
      shell: cmd  

    - name: Get-PSReadlineOption
      run: Powershell.exe -NoProfile -ExecutionPolicy Bypass -NoLogo -Command Get-PSReadlineOption
      shell: cmd  

    - name: Create PSReadLine Dir
      shell: pwsh
      run: New-Item -Path C:\Users\runneradmin\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadLine\ -ItemType Directory -ErrorAction SilentlyContinue  

        #- name: Create History File
        #run: echo "This is just a sample line appended to create a big file.. " > C:\Users\runneradmin\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt

    - name: Enbiggen History File
      run: For ($i=0; $i -le 30000; $i++)  { Add-Content -Path C:\Users\runneradmin\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt  -Value "this is a test" }
      shell: pwsh  

    - name: History Filesize
      run: dir C:\Users\runneradmin\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt

    - name: Execute check-windows-http.ps1
      run: Powershell.exe -NoProfile -ExecutionPolicy Bypass -NoLogo -Command "./bin/check-windows-http.ps1  https://sensu.io monitoring; Get-Module"
      shell: cmd  

    - name: Execute check-windows-disk.ps1
      run: Powershell.exe -NoProfile -ExecutionPolicy Bypass -NoLogo -Command ./bin/check-windows-disk.ps1 90 95  
      shell: cmd  

    - name: Execute check-windows-ram.ps1
      run: Powershell.exe -NoProfile -ExecutionPolicy Bypass -NoLogo -Command ./bin/check-windows-ram.ps1 90 95  
      shell: cmd  

    - name: Execute check-windows-cpu-load.ps1
      run: Powershell.exe -NoProfile -ExecutionPolicy Bypass -NoLogo -Command "Start-Sleep -Seconds 5; ./bin/check-windows-cpu-load.ps1 90 95; Get-Module"  
      shell: cmd  

    - name: Tail History
      run: tail C:\Users\runneradmin\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt

    - name: Head History
      run: Head C:\Users\runneradmin\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt
